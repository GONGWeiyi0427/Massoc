; SMT-LIBv2 description generated by Yosys 0.11+13 (git sha1 UNKNOWN, gcc 4.8.5 -fPIC -Os)
; yosys-smt2-module busyctr
(declare-sort |busyctr_s| 0)
(declare-fun |busyctr_is| (|busyctr_s|) Bool)
(declare-fun |busyctr#0| (|busyctr_s|) (_ BitVec 3)) ; { \counter [4] \counter [2] \counter [0] }
(declare-fun |busyctr#1| (|busyctr_s|) (_ BitVec 13)) ; { \counter [15:5] \counter [3] \counter [1] }
(define-fun |busyctr#2| ((state |busyctr_s|)) Bool (distinct (concat ((_ extract 12 2) (|busyctr#1| state)) (concat ((_ extract 2 2) (|busyctr#0| state)) (concat ((_ extract 1 1) (|busyctr#1| state)) (concat ((_ extract 1 1) (|busyctr#0| state)) (concat ((_ extract 0 0) (|busyctr#1| state)) ((_ extract 0 0) (|busyctr#0| state))))))) #b0000000000000000)) ; \o_busy
; yosys-smt2-output o_busy 1
; yosys-smt2-wire o_busy 1
(define-fun |busyctr_n o_busy| ((state |busyctr_s|)) Bool (|busyctr#2| state))
(declare-fun |busyctr#3| (|busyctr_s|) Bool) ; \i_start_signal
; yosys-smt2-input i_start_signal 1
; yosys-smt2-wire i_start_signal 1
(define-fun |busyctr_n i_start_signal| ((state |busyctr_s|)) Bool (|busyctr#3| state))
(declare-fun |busyctr#4| (|busyctr_s|) Bool) ; \i_reset
; yosys-smt2-input i_reset 1
; yosys-smt2-wire i_reset 1
(define-fun |busyctr_n i_reset| ((state |busyctr_s|)) Bool (|busyctr#4| state))
(declare-fun |busyctr#5| (|busyctr_s|) Bool) ; \i_clk
; yosys-smt2-input i_clk 1
; yosys-smt2-wire i_clk 1
; yosys-smt2-clock i_clk posedge
(define-fun |busyctr_n i_clk| ((state |busyctr_s|)) Bool (|busyctr#5| state))
; yosys-smt2-register counter 16
; yosys-smt2-wire counter 16
(define-fun |busyctr_n counter| ((state |busyctr_s|)) (_ BitVec 16) (concat ((_ extract 12 2) (|busyctr#1| state)) (concat ((_ extract 2 2) (|busyctr#0| state)) (concat ((_ extract 1 1) (|busyctr#1| state)) (concat ((_ extract 1 1) (|busyctr#0| state)) (concat ((_ extract 0 0) (|busyctr#1| state)) ((_ extract 0 0) (|busyctr#0| state))))))))
(declare-fun |busyctr#6| (|busyctr_s|) (_ BitVec 16)) ; $past$busyctr.v:97$3$0
; yosys-smt2-register $past$busyctr.v:97$3$0 16
(define-fun |busyctr_n $past$busyctr.v:97$3$0| ((state |busyctr_s|)) (_ BitVec 16) (|busyctr#6| state))
(declare-fun |busyctr#7| (|busyctr_s|) (_ BitVec 1)) ; $past$busyctr.v:96$2$0
; yosys-smt2-register $past$busyctr.v:96$2$0 1
(define-fun |busyctr_n $past$busyctr.v:96$2$0| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#7| state)) #b1))
(declare-fun |busyctr#8| (|busyctr_s|) (_ BitVec 1)) ; $past$busyctr.v:96$1$0
; yosys-smt2-register $past$busyctr.v:96$1$0 1
(define-fun |busyctr_n $past$busyctr.v:96$1$0| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#8| state)) #b1))
(declare-fun |busyctr#9| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:96$8_EN
; yosys-smt2-register $formal$busyctr.v:96$8_EN 1
(define-fun |busyctr_n $formal$busyctr.v:96$8_EN| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#9| state)) #b1))
(declare-fun |busyctr#10| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:96$8_CHECK
; yosys-smt2-register $formal$busyctr.v:96$8_CHECK 1
(define-fun |busyctr_n $formal$busyctr.v:96$8_CHECK| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#10| state)) #b1))
; yosys-smt2-anyseq busyctr#11 1 $auto$setundef.cc:501:execute$95
(declare-fun |busyctr#11| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:3068:Anyseq$96
(define-fun |busyctr#12| ((state |busyctr_s|)) Bool (not (or  (= ((_ extract 0 0) (|busyctr#0| state)) #b1) (= ((_ extract 0 0) (|busyctr#1| state)) #b1) (= ((_ extract 1 1) (|busyctr#0| state)) #b1) (= ((_ extract 1 1) (|busyctr#1| state)) #b1) (= ((_ extract 2 2) (|busyctr#0| state)) #b1) (= ((_ extract 2 2) (|busyctr#1| state)) #b1) (= ((_ extract 3 3) (|busyctr#1| state)) #b1) (= ((_ extract 4 4) (|busyctr#1| state)) #b1) (= ((_ extract 5 5) (|busyctr#1| state)) #b1) (= ((_ extract 6 6) (|busyctr#1| state)) #b1) (= ((_ extract 7 7) (|busyctr#1| state)) #b1) (= ((_ extract 8 8) (|busyctr#1| state)) #b1) (= ((_ extract 9 9) (|busyctr#1| state)) #b1) (= ((_ extract 10 10) (|busyctr#1| state)) #b1) (= ((_ extract 11 11) (|busyctr#1| state)) #b1) (= ((_ extract 12 12) (|busyctr#1| state)) #b1)))) ; $auto$wreduce.cc:454:run$88 [0]
(define-fun |busyctr#13| ((state |busyctr_s|)) Bool (and (or  (|busyctr#3| state) false) (or  (|busyctr#12| state) false))) ; $logic_and$busyctr.v:68$11_Y
(define-fun |busyctr#14| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#13| state) (ite (|busyctr#3| state) #b1 #b0) (|busyctr#11| state))) ; $0$formal$busyctr.v:84$5_CHECK[0:0]$21
(define-fun |busyctr#15| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#13| state) #b1 #b0)) ; $0$formal$busyctr.v:84$5_EN[0:0]$22
; yosys-smt2-assume 0 busyctr.v:84.41-85.26
(define-fun |busyctr_u 0| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#14| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#15| state)) #b1)))) ; $assume$busyctr.v:84$47
; yosys-smt2-assert 0 busyctr.v:96.66-97.44
(define-fun |busyctr_a 0| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#10| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#9| state)) #b1)))) ; $assert$busyctr.v:96$50
(define-fun |busyctr#16| ((state |busyctr_s|)) Bool (not (or  (|busyctr#2| state) false))) ; $logic_not$busyctr.v:92$32_Y
; yosys-smt2-anyseq busyctr#17 1 $auto$setundef.cc:501:execute$93
(declare-fun |busyctr#17| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:3068:Anyseq$94
(define-fun |busyctr#18| ((state |busyctr_s|)) Bool (not (or  (|busyctr#12| state) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $eq$busyctr.v:89$31_Y
(define-fun |busyctr#19| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#18| state) (|busyctr#17| state) (ite (|busyctr#16| state) #b1 #b0))) ; $0$formal$busyctr.v:91$7_CHECK[0:0]$28
(define-fun |busyctr#20| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#18| state) #b0 #b1)) ; $0$formal$busyctr.v:91$7_EN[0:0]$29
; yosys-smt2-assert 1 busyctr.v:91.7-92.19
(define-fun |busyctr_a 1| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#19| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#20| state)) #b1)))) ; $assert$busyctr.v:91$49
; yosys-smt2-anyseq busyctr#21 1 $auto$setundef.cc:501:execute$91
(declare-fun |busyctr#21| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:3068:Anyseq$92
(define-fun |busyctr#22| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#18| state) (ite (|busyctr#2| state) #b1 #b0) (|busyctr#21| state))) ; $0$formal$busyctr.v:89$6_CHECK[0:0]$26
(define-fun |busyctr#23| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#18| state) #b1 #b0)) ; $0$formal$busyctr.v:89$6_EN[0:0]$27
; yosys-smt2-assert 2 busyctr.v:89.20-90.18
(define-fun |busyctr_a 2| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#22| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#23| state)) #b1)))) ; $assert$busyctr.v:89$48
(define-fun |busyctr#24| ((state |busyctr_s|)) Bool (bvult (concat ((_ extract 12 2) (|busyctr#1| state)) (concat ((_ extract 2 2) (|busyctr#0| state)) (concat ((_ extract 1 1) (|busyctr#1| state)) (concat ((_ extract 1 1) (|busyctr#0| state)) (concat ((_ extract 0 0) (|busyctr#1| state)) ((_ extract 0 0) (|busyctr#0| state))))))) #b0000000000010110)) ; $0$formal$busyctr.v:79$4_CHECK[0:0]$17
; yosys-smt2-assert 3 busyctr.v:79.13-80.31
(define-fun |busyctr_a 3| ((state |busyctr_s|)) Bool (or (|busyctr#24| state) (not true))) ; $assert$busyctr.v:79$46
; yosys-smt2-anyseq busyctr#25 1 $auto$setundef.cc:501:execute$89
(declare-fun |busyctr#25| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:3068:Anyseq$90
(define-fun |busyctr#26| ((state |busyctr_s|)) (_ BitVec 16) (bvadd (concat ((_ extract 12 2) (|busyctr#1| state)) (concat ((_ extract 2 2) (|busyctr#0| state)) (concat ((_ extract 1 1) (|busyctr#1| state)) (concat ((_ extract 1 1) (|busyctr#0| state)) (concat ((_ extract 0 0) (|busyctr#1| state)) ((_ extract 0 0) (|busyctr#0| state))))))) #b0000000000000001)) ; $add$busyctr.v:97$44_Y
(define-fun |busyctr#27| ((state |busyctr_s|)) Bool (= (|busyctr#6| state) (|busyctr#26| state))) ; $eq$busyctr.v:97$45_Y
(define-fun |busyctr#28| ((state |busyctr_s|)) Bool (not (or  (= ((_ extract 0 0) (|busyctr#8| state)) #b1) false))) ; $logic_not$busyctr.v:96$39_Y
(define-fun |busyctr#29| ((state |busyctr_s|)) Bool (and (or  (|busyctr#28| state) false) (or  (|busyctr#2| state) false))) ; $logic_and$busyctr.v:96$41_Y
(define-fun |busyctr#30| ((state |busyctr_s|)) Bool (not (or  (= ((_ extract 0 0) (|busyctr#7| state)) #b1) false))) ; $logic_not$busyctr.v:96$42_Y
(define-fun |busyctr#31| ((state |busyctr_s|)) Bool (and (or  (|busyctr#29| state) false) (or  (|busyctr#30| state) false))) ; $logic_and$busyctr.v:96$43_Y
(define-fun |busyctr#32| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#31| state) (ite (|busyctr#27| state) #b1 #b0) (|busyctr#25| state))) ; $0$formal$busyctr.v:96$8_CHECK[0:0]$37
(define-fun |busyctr#33| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#31| state) #b1 #b0)) ; $0$formal$busyctr.v:96$8_EN[0:0]$38
(define-fun |busyctr#34| ((state |busyctr_s|)) (_ BitVec 16) (bvsub (concat ((_ extract 12 2) (|busyctr#1| state)) (concat ((_ extract 2 2) (|busyctr#0| state)) (concat ((_ extract 1 1) (|busyctr#1| state)) (concat ((_ extract 1 1) (|busyctr#0| state)) (concat ((_ extract 0 0) (|busyctr#1| state)) ((_ extract 0 0) (|busyctr#0| state))))))) #b0000000000000001)) ; $sub$busyctr.v:71$13_Y
(define-fun |busyctr#35| ((state |busyctr_s|)) (_ BitVec 13) (ite (|busyctr#2| state) (concat ((_ extract 15 5) (|busyctr#34| state)) (concat ((_ extract 3 3) (|busyctr#34| state)) ((_ extract 1 1) (|busyctr#34| state)))) (|busyctr#1| state))) ; $auto$rtlil.cc:2414:Mux$110
(define-fun |busyctr#36| ((state |busyctr_s|)) Bool (or  (|busyctr#4| state) (|busyctr#13| state))) ; $auto$opt_dff.cc:256:combine_resets$99
(define-fun |busyctr#37| ((state |busyctr_s|)) (_ BitVec 13) (ite (|busyctr#36| state) #b0000000000000 (|busyctr#35| state))) ; $auto$rtlil.cc:2414:Mux$112
(define-fun |busyctr#38| ((state |busyctr_s|)) (_ BitVec 16) (ite (|busyctr#2| state) (|busyctr#34| state) (concat ((_ extract 12 2) (|busyctr#1| state)) (concat #b0 (concat ((_ extract 1 1) (|busyctr#1| state)) (concat #b0 (concat ((_ extract 0 0) (|busyctr#1| state)) #b0))))))) ; $procmux$74_Y
(define-fun |busyctr#39| ((state |busyctr_s|)) (_ BitVec 16) (ite (|busyctr#13| state) #b0000000000010101 (|busyctr#38| state))) ; $procmux$77_Y
(define-fun |busyctr#40| ((state |busyctr_s|)) Bool (or  (|busyctr#2| state) (|busyctr#13| state))) ; $auto$opt_dff.cc:197:make_patterns_logic$103
(define-fun |busyctr#41| ((state |busyctr_s|)) (_ BitVec 3) (ite (|busyctr#40| state) (concat ((_ extract 4 4) (|busyctr#39| state)) (concat ((_ extract 2 2) (|busyctr#39| state)) ((_ extract 0 0) (|busyctr#39| state)))) (|busyctr#0| state))) ; $auto$rtlil.cc:2414:Mux$106
(define-fun |busyctr#42| ((state |busyctr_s|)) (_ BitVec 3) (ite (|busyctr#4| state) #b000 (|busyctr#41| state))) ; $auto$rtlil.cc:2414:Mux$108
(define-fun |busyctr_a| ((state |busyctr_s|)) Bool (and
  (|busyctr_a 0| state)
  (|busyctr_a 1| state)
  (|busyctr_a 2| state)
  (|busyctr_a 3| state)
))
(define-fun |busyctr_u| ((state |busyctr_s|)) Bool 
  (|busyctr_u 0| state)
)
(define-fun |busyctr_i| ((state |busyctr_s|)) Bool (and
  (= (concat ((_ extract 12 2) (|busyctr#1| state)) (concat ((_ extract 2 2) (|busyctr#0| state)) (concat ((_ extract 1 1) (|busyctr#1| state)) (concat ((_ extract 1 1) (|busyctr#0| state)) (concat ((_ extract 0 0) (|busyctr#1| state)) ((_ extract 0 0) (|busyctr#0| state))))))) #b0000000000000000) ; counter
  (= (= ((_ extract 0 0) (|busyctr#9| state)) #b1) false) ; $formal$busyctr.v:96$8_EN
))
(define-fun |busyctr_h| ((state |busyctr_s|)) Bool true)
(define-fun |busyctr_t| ((state |busyctr_s|) (next_state |busyctr_s|)) Bool (and
  (= (|busyctr#32| state) (|busyctr#10| next_state)) ; $procdff$85 $formal$busyctr.v:96$8_CHECK
  (= (|busyctr#33| state) (|busyctr#9| next_state)) ; $procdff$86 $formal$busyctr.v:96$8_EN
  (= (ite (|busyctr#4| state) #b1 #b0) (|busyctr#8| next_state)) ; $procdff$82 $past$busyctr.v:96$1$0
  (= (ite (|busyctr#3| state) #b1 #b0) (|busyctr#7| next_state)) ; $procdff$83 $past$busyctr.v:96$2$0
  (= (concat ((_ extract 12 2) (|busyctr#1| state)) (concat ((_ extract 2 2) (|busyctr#0| state)) (concat ((_ extract 1 1) (|busyctr#1| state)) (concat ((_ extract 1 1) (|busyctr#0| state)) (concat ((_ extract 0 0) (|busyctr#1| state)) ((_ extract 0 0) (|busyctr#0| state))))))) (|busyctr#6| next_state)) ; $procdff$84 $past$busyctr.v:97$3$0
  (= (|busyctr#37| state) (|busyctr#1| next_state)) ; $auto$ff.cc:262:slice$101 { \counter [15:5] \counter [3] \counter [1] }
  (= (|busyctr#42| state) (|busyctr#0| next_state)) ; $auto$ff.cc:262:slice$102 { \counter [4] \counter [2] \counter [0] }
)) ; end of module busyctr
; yosys-smt2-topmod busyctr
; end of yosys output
